<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.office.system.modlues.rlM.dao.RlRuleMessageDao" >
  <resultMap id="BaseResultMap" type="RlRuleMessage" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="text" property="text" jdbcType="VARCHAR" />
     <result column="create_by" property="createBy.id" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="DATE" />
    <result column="del_flag" property="delFlag" jdbcType="VARCHAR" />
     <result column="update_by" property="updateBy.id" jdbcType="VARCHAR" />
    <result column="update_date" property="updateDate" jdbcType="DATE" />
    <result column="rule_title" property="ruleTitle" jdbcType="VARCHAR" />
    <association property="createBy"
                 javaType="SysOUser"
                 column="create_by"
                 select="findSysOUserBase"
    >
    </association>
  </resultMap>
  <select id="findSysOUserBase" resultType="SysOUser">
   select * from SYS_O_USER where "id"=#{xxx}
  </select>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    r."id", r."text", r."create_by", r."create_date", r."del_flag", r."update_by", r."update_date", r."rule_title"
  </sql>

  <select id="findList" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from RL_RULE_MESSAGE r
    <where>
      r."del_flag" = 0
      <if test="datemin != null and datemin != '' and datemax != null and datemax != ''">
        AND r."create_date" between to_date(#{datemin},'yyyy-MM-dd') and to_date(#{datemax},'yyyy-MM-dd')
      </if>
      <if test="ruleTitle != null and ruleTitle != ''">
        AND r."rule_title" LIKE
        '%'||#{ruleTitle}||'%'
        <!-- <if test="dbName == 'mssql'">'%'+#{title}+'%'</if>
        <if test="dbName == 'mysql'">CONCAT('%', #{title}, '%')</if> -->
      </if>
      <if test="createBy != null and createBy.id != null and createBy.id != ''">
        AND r."create_by"  = #{createBy.id}
      </if>
    </where>
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from RL_RULE_MESSAGE r
    where r."id" = #{ruleId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from RL_RULE_MESSAGE
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <!-- <delete id="deleteByExample" parameterType="com.itheima.mybatis.pojo.RlRuleMessageExample" >
    delete from RL_RULE_MESSAGE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete> -->
  <insert id="insert" parameterType="RlRuleMessage" >
    <selectKey keyProperty="id" resultType="String" order="BEFORE">
      select  lower(sys_guid()) from DUAL
    </selectKey>
    insert into RL_RULE_MESSAGE ("id", "text", "create_by",
    "create_date", "del_flag", "update_by",
    "update_date","rule_title")
     values (#{id,jdbcType=VARCHAR}, #{text,jdbcType=VARCHAR}, #{createBy.id,jdbcType=VARCHAR},
      #{createDate,jdbcType=DATE}, #{delFlag,jdbcType=VARCHAR}, #{updateBy.id,jdbcType=VARCHAR},
      #{updateDate,jdbcType=DATE},#{ruleTitle,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="RlRuleMessage" >
    insert into RL_RULE_MESSAGE
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="text != null" >
        text,
      </if>
      <!-- <if test="createBy != null" >
        create_by,
      </if> -->
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
     <!--  <if test="updateBy != null" >
        update_by,
      </if> -->
      <if test="updateDate != null" >
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="text != null" >
        #{text,jdbcType=VARCHAR},
      </if>
      <!-- <if test="createBy != null" >
        #{createBy.id,jdbcType=VARCHAR},
      </if> -->
      <if test="createDate != null" >
        #{createDate,jdbcType=DATE},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=VARCHAR},
      </if>
    <!--   <if test="updateBy != null" >
        #{updateBy.id,jdbcType=VARCHAR},
      </if> -->
      <if test="updateDate != null" >
        #{updateDate,jdbcType=DATE},
      </if>
    </trim>
  </insert>
 <!--  <select id="countByExample" parameterType="com.itheima.mybatis.pojo.RlRuleMessageExample" resultType="java.lang.Integer" >
    select count(*) from RL_RULE_MESSAGE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select> -->
  <update id="updateByExampleSelective" parameterType="map" >
    update RL_RULE_MESSAGE
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.text != null" >
        text = #{record.text,jdbcType=VARCHAR},
      </if>
     <!--  <if test="record.createBy != null" >
        create_by = #{record.createBy.id,jdbcType=VARCHAR},
      </if> -->
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=DATE},
      </if>
      <if test="record.delFlag != null" >
        del_flag = #{record.delFlag,jdbcType=VARCHAR},
      </if>
   <!--    <if test="record.updateBy != null" >
        update_by = #{record.updateBy.id,jdbcType=VARCHAR},
      </if> -->
      <if test="record.updateDate != null" >
        update_date = #{record.updateDate,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update RL_RULE_MESSAGE
    set id = #{record.id,jdbcType=VARCHAR},
      text = #{record.text,jdbcType=VARCHAR},
<!--       create_by = #{record.createBy.id,jdbcType=VARCHAR},
 -->      create_date = #{record.createDate,jdbcType=DATE},
      del_flag = #{record.delFlag,jdbcType=VARCHAR},
<!--       update_by = #{record.updateBy.id,jdbcType=VARCHAR},
 -->      update_date = #{record.updateDate,jdbcType=DATE}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="RlRuleMessage" >
    update RL_RULE_MESSAGE
    <set >
      <if test="text != null" >
        text = #{text,jdbcType=VARCHAR},
      </if>
     <!--  <if test="createBy != null" >
        create_by = #{createBy.id,jdbcType=VARCHAR},
      </if> -->
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=DATE},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=VARCHAR},
      </if>
     <!--  <if test="updateBy != null" >
        update_by = #{updateBy.id,jdbcType=VARCHAR},
      </if> -->
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=DATE},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateDelFlagById">
    update RL_OVERTIME
    set
    "del_flag" = 1
    where "id" = #{id,jdbcType=VARCHAR}
  </update>

  <update id="updateByPrimaryKey" parameterType="RlRuleMessage" >
    update RL_RULE_MESSAGE
    set text = #{text,jdbcType=VARCHAR},
<!--       create_by = #{createBy.id,jdbcType=VARCHAR},
 -->      create_date = #{createDate,jdbcType=DATE},
      del_flag = #{delFlag,jdbcType=VARCHAR},
      update_by = #{updateBy.id,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=DATE}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>