<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.office.system.modlues.msgM.dao.InfEmailDao">
  <resultMap id="BaseResultMap" type="InfEmail" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="text" property="text" jdbcType="VARCHAR" />
    <result column="staut" property="staut" jdbcType="VARCHAR" />
    <result column="sendTime" property="sendtime" jdbcType="DATE" />
    <result column="get_user_id" property="getUserId" jdbcType="VARCHAR" />
    <result column="send_user_id" property="sendUserId" jdbcType="VARCHAR" />
    <result column="del_flag" property="delFlag" jdbcType="VARCHAR" />
<!--     <result column="creat_by" property="createBy" jdbcType="VARCHAR" />
 -->    <result column="create_date" property="createDate" jdbcType="DATE" />
<!--     <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
 -->    <result column="update_date" property="updateDate" jdbcType="DATE" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, text, staut, sendTime, get_user_id, send_user_id, del_flag, creat_by, create_date, 
    update_by, update_date
  </sql>
<!--   <select id="selectByExample" resultMap="BaseResultMap" parameterType="InfEmailExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from INF_EMAIL
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select> -->
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from INF_EMAIL
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from INF_EMAIL
    where id = #{id,jdbcType=VARCHAR}
  </delete>
<!--   <delete id="deleteByExample" parameterType="InfEmailExample" >
    delete from INF_EMAIL
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete> -->
  <insert id="insert" parameterType="InfEmail" >
    insert into INF_EMAIL (id, text, staut, 
      sendTime, get_user_id, send_user_id, 
      del_flag, creat_by, create_date, 
      update_by, update_date)
    values (#{id,jdbcType=VARCHAR}, #{text,jdbcType=VARCHAR}, #{staut,jdbcType=VARCHAR}, 
      #{sendtime,jdbcType=DATE}, #{getUserId,jdbcType=VARCHAR}, #{sendUserId,jdbcType=VARCHAR}, 
      #{delFlag,jdbcType=VARCHAR}, #{createBy.id,jdbcType=VARCHAR}, #{createDate,jdbcType=DATE}, 
     <!--  #{updateBy,jdbcType=VARCHAR} -->, #{updateDate,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="InfEmail" >
    insert into INF_EMAIL
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="text != null" >
        text,
      </if>
      <if test="staut != null" >
        staut,
      </if>
      <if test="sendtime != null" >
        sendTime,
      </if>
      <if test="getUserId != null" >
        get_user_id,
      </if>
      <if test="sendUserId != null" >
        send_user_id,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
    <!--   <if test="createBy != null" >
        creat_by,
      </if> -->
      <if test="createDate != null" >
        create_date,
      </if>
    <!--   <if test="updateBy != null" >
        update_by,
      </if> -->
      <if test="updateDate != null" >
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="text != null" >
        #{text,jdbcType=VARCHAR},
      </if>
      <if test="staut != null" >
        #{staut,jdbcType=VARCHAR},
      </if>
      <if test="sendtime != null" >
        #{sendtime,jdbcType=DATE},
      </if>
      <if test="getUserId != null" >
        #{getUserId,jdbcType=VARCHAR},
      </if>
      <if test="sendUserId != null" >
        #{sendUserId,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=VARCHAR},
      </if>
     <!--  <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if> -->
      <if test="createDate != null" >
        #{createDate,jdbcType=DATE},
      </if>
     <!--  <if test="updateBy != null" >
        #{updateBy,jdbcType=VARCHAR},
      </if> -->
      <if test="updateDate != null" >
        #{updateDate,jdbcType=DATE},
      </if>
    </trim>
  </insert>
<!--   <select id="countByExample" parameterType="InfEmailExample" resultType="java.lang.Integer" >
    select count(*) from INF_EMAIL
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select> -->
<!--   <update id="updateByExampleSelective" parameterType="map" >
    update INF_EMAIL
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.text != null" >
        text = #{record.text,jdbcType=VARCHAR},
      </if>
      <if test="record.staut != null" >
        staut = #{record.staut,jdbcType=VARCHAR},
      </if>
      <if test="record.sendtime != null" >
        sendTime = #{record.sendtime,jdbcType=DATE},
      </if>
      <if test="record.getUserId != null" >
        get_user_id = #{record.getUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.sendUserId != null" >
        send_user_id = #{record.sendUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.delFlag != null" >
        del_flag = #{record.delFlag,jdbcType=VARCHAR},
      </if>
      <if test="record.createBy != null" >
        creat_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=DATE},
      </if>
      <if test="record.updateBy != null" >
        update_by = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateDate != null" >
        update_date = #{record.updateDate,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update> -->
  
  <update id="updateByPrimaryKeySelective" parameterType="InfEmail" >
    update INF_EMAIL
    <set >
      <if test="text != null" >
        text = #{text,jdbcType=VARCHAR},
      </if>
      <if test="staut != null" >
        staut = #{staut,jdbcType=VARCHAR},
      </if>
      <if test="sendtime != null" >
        sendTime = #{sendtime,jdbcType=DATE},
      </if>
      <if test="getUserId != null" >
        get_user_id = #{getUserId,jdbcType=VARCHAR},
      </if>
      <if test="sendUserId != null" >
        send_user_id = #{sendUserId,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=VARCHAR},
      </if>
    <!--   <if test="createBy != null" >
        creat_by = #{createBy,jdbcType=VARCHAR},
      </if> -->
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=DATE},
      </if>
      <!-- <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if> -->
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=DATE},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="InfEmail" >
    update INF_EMAIL
    set text = #{text,jdbcType=VARCHAR},
      staut = #{staut,jdbcType=VARCHAR},
      sendTime = #{sendtime,jdbcType=DATE},
      get_user_id = #{getUserId,jdbcType=VARCHAR},
      send_user_id = #{sendUserId,jdbcType=VARCHAR},
      del_flag = #{delFlag,jdbcType=VARCHAR},
      creat_by = #{createBy.id,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=DATE},
<!--       update_by = #{updateBy,jdbcType=VARCHAR},
 -->      update_date = #{updateDate,jdbcType=DATE}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>
