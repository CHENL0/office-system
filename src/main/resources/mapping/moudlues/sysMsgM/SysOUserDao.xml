<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.office.system.modlues.sysMsgM.dao.SysOUserDao" >
 <!--  <resultMap id="BaseResultMap" type="SysOUser" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="DATE" />
    <result column="del_flag" property="delFlag" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="login_name" property="loginName" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="photo" property="photo" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="no" property="no" jdbcType="VARCHAR" />
    <result column="old_password" property="oldPassword" jdbcType="VARCHAR" />
    <result column="new_password" property="newPassword" jdbcType="VARCHAR" />
    <result column="role" property="role" jdbcType="VARCHAR" />
    <result column="adress" property="adress" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
  </resultMap> -->

  <sql id="sysMsgMUserColumns" >
         a."id" AS id,       
		 a."name" AS name,   
		 a."login_name" AS loginName,
		 a."create_date" AS createDate,
		 a."del_flag" AS delFlag,
		 a."create_by" AS createBy,
		 a."update_by" AS updateBy,
		 a."update_date" AS updateDate,
		<!--  a."new_password" AS newPassword,
		 a."old_password" AS oldPassword, -->
		 a."password" AS password,
		 a."no" AS no,
		 a."adress" AS adress,
		 a."phone" AS phone,
		 a."photo" AS photo,
		 a."email" AS email,
		 a."adress" AS adress,
		 a."sex" AS sex,
		 o."id" AS "sysODepartment.id",
		  o."name" AS "sysODepartment.name",
<!-- 		 e."id" AS "email.id",
 -->		 r."id" AS "sysORole.id",
		 r."name" AS "sysORole.name"
  </sql>
    <sql id="sysMsgMUserJoins">
	  LEFT JOIN SYS_O_DEPARTMENT o ON o."id" = a."departme_id"
<!-- 	  LEFT JOIN INF_EMAIL e ON e."id" = a."email_id"
 -->	  LEFT JOIN SYS_O_ROLE r ON r."id" = a."role_id"
	</sql>
	<!-- 根据编号获得用户 -->
	<select id="get" resultType="SysOUser">
		SELECT 
		<include refid="sysMsgMUserColumns"/>
		FROM  SYS_O_USER a
		<include refid="sysMsgMUserJoins"/>
		WHERE a."id" = #{id}
	</select>
	<!-- 查询用户信息 -->
	<select id="findList" resultType="SysOUser">
		SELECT 
		<include refid="sysMsgMUserColumns"/>
		FROM SYS_O_USER a
		<include refid="sysMsgMUserJoins"/>
	<where>
			a."del_flag" = #{delFlag}
			<if test="name != null and name != ''">
				AND a."name" LIKE 
					'%'||#{name}||'%'
					<!-- <if test="dbName == 'mssql'">'%'+#{title}+'%'</if>
					<if test="dbName == 'mysql'">CONCAT('%', #{title}, '%')</if> -->
			</if>
			<if test="loginName != null and loginName != ''">
				AND a."login_name" LIKE 
					'%'||#{loginName}||'%'
			</if>
			<if test="datemin != null and datemin != '' and datemax != null and datemax != ''">
				AND a."create_date" between to_date(#{datemin},'yyyy-MM-dd') and to_date(#{datemax},'yyyy-MM-dd')
			</if>
			<!-- <if test="sysODepartment.id != null and sysODepartment.id != ''">
				AND a."departme_id" = #{sysODepartment.id}
			</if> -->
			<!-- <if test="image != null and image != ''">
				AND a.image  = #{image}
			</if>
			<if test="createBy != null and createBy.id != null and createBy.id != ''">
				AND a.create_by  = #{createBy.id}
			</if>
			${sqlMap.dsf}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.weight DESC, a.update_date DESC
			</otherwise>
		</choose> -->
		</where>
	</select>
	<!-- 插入用户 -->
	<insert id="insert" parameterType="SysOUser" >
	<!-- 在插入之前id生成UUID，并赋值到SysOUser对象中 -->
	 <selectKey keyProperty="id" resultType="String" order="BEFORE">
            select  lower(sys_guid()) from DUAL
     </selectKey>
    insert into SYS_O_USER 
    ("id", "create_date", "del_flag","create_by","update_date",
      "name", "login_name","phone",
      "photo", "no","password", "sex",
      "role_id", "adress","departme_id")
    values (#{id,jdbcType=VARCHAR}, #{createDate,jdbcType=DATE}, #{delFlag,jdbcType=VARCHAR},
      #{createBy.id,jdbcType=VARCHAR},#{updateDate,jdbcType=DATE},
      #{name,jdbcType=VARCHAR}, #{loginName,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{photo,jdbcType=VARCHAR}, #{no,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR},
      #{sysORole.id,jdbcType=VARCHAR}, #{adress,jdbcType=VARCHAR},#{sysODepartment.id,jdbcType=VARCHAR})
     </insert>
     <!-- 更新用户信息  -->
    <update id="update" >
    update SYS_O_USER
    set <!-- "create_date" = #{createDate,jdbcType=DATE}, -->
      "del_flag" = #{delFlag,jdbcType=VARCHAR},
      "name" = #{name,jdbcType=VARCHAR},
      "login_name" = #{loginName,jdbcType=VARCHAR},
      "phone" = #{phone,jdbcType=VARCHAR},
       "sex" = #{sex,jdbcType=VARCHAR},
      <!-- "photo" = #{photo,jdbcType=VARCHAR}, -->
      "no" = #{no,jdbcType=VARCHAR},
      "email" = #{email,jdbcType=VARCHAR},
      <!-- old_password = #{oldPassword,jdbcType=VARCHAR},
      new_password = #{newPassword,jdbcType=VARCHAR}, -->
    <!--   "password" = #{password,jdbcType=VARCHAR}, -->
<!--       "role_id" = #{sysORole.id,jdbcType=VARCHAR}, -->
      "adress" = #{adress,jdbcType=VARCHAR},
      "update_by" = #{updateBy.id,jdbcType=VARCHAR},
      "update_date" = #{updateDate,jdbcType=DATE}
 <!--      "departme_id" = #{sysODepartment.id,jdbcType=VARCHAR} -->
<!--       email_id = #{email.id,jdbcType=VARCHAR}
 -->    where "id" = #{id,jdbcType=VARCHAR}
  </update>
  <!-- 逻辑删除用户 -->
  <update id="delete">
		UPDATE SYS_O_USER SET 
			"del_flag" = 1
		WHERE "id" = #{id}
 </update>
 <!-- 逻辑级联删除用户的邮件 -->
  <update id="deleteGetSysOUserEmail">
		UPDATE INF_EMAIL SET 
			"get_user_id" = ''
		WHERE "get_user_id" = #{id}
  </update>
  <update id="deleteSendSysOUserEmail">
		UPDATE INF_EMAIL SET 
			"send_user_id" = ''
		WHERE "send_user_id" = #{id}
  </update>
 	<!-- 更新用户密码 -->
	<update id="updatePasswordById">
		UPDATE SYS_O_USER SET 
			"password" = #{password} 
		WHERE "id" = #{id}
	</update>
	<!-- 更新部门 和角色-->
	<update id="updateDepartment">
	  UPDATE SYS_O_USER SET 
			"departme_id" = #{sysODepartment.id},"role_id" = #{sysORole.id}
		WHERE "id" = #{id}
	</update>
</mapper> 
	
	
	<!--   <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from SYS_O_USER
    where id = #{id,jdbcType=VARCHAR}
  </select> -->
  <!-- <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from SYS_O_USER
    where id = #{id,jdbcType=VARCHAR}
  </delete>


  
  <insert id="insertSelective" parameterType="SysOUser" >
    insert into SYS_O_USER
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="loginName != null" >
        login_name,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="photo != null" >
        photo,
      </if>
     
      <if test="no != null" >
        no,
      </if>
      <if test="oldPassword != null" >
        old_password,
      </if>
      <if test="newPassword != null" >
        new_password,
      </if>
      <if test="role != null" >
        role,
      </if>
      <if test="adress != null" >
        adress,
      </if>
     
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=DATE},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null" >
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="photo != null" >
        #{photo,jdbcType=VARCHAR},
      </if>
     
      <if test="no != null" >
        #{no,jdbcType=DECIMAL},
      </if>
      <if test="oldPassword != null" >
        #{oldPassword,jdbcType=VARCHAR},
      </if>
      <if test="newPassword != null" >
        #{newPassword,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        #{role,jdbcType=VARCHAR},
      </if>
      <if test="adress != null" >
        #{adress,jdbcType=VARCHAR},
      </if>
    
    </trim>
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="SysOUser" >
    update SYS_O_USER
    <set >
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=DATE},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null" >
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="photo != null" >
        photo = #{photo,jdbcType=VARCHAR},
      </if>
      
      <if test="no != null" >
        no = #{no,jdbcType=DECIMAL},
      </if>
      <if test="oldPassword != null" >
        old_password = #{oldPassword,jdbcType=VARCHAR},
      </if>
      <if test="newPassword != null" >
        new_password = #{newPassword,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        role = #{role,jdbcType=VARCHAR},
      </if>
      <if test="adress != null" >
        adress = #{adress,jdbcType=VARCHAR},
      </if>
      
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="SysOUser" >
    update SYS_O_USER
    set create_date = #{createDate,jdbcType=DATE},
      del_flag = #{delFlag,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      login_name = #{loginName,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      photo = #{photo,jdbcType=VARCHAR},
      no = #{no,jdbcType=DECIMAL},
      old_password = #{oldPassword,jdbcType=VARCHAR},
      new_password = #{newPassword,jdbcType=VARCHAR},
      role = #{role,jdbcType=VARCHAR},
      adress = #{adress,jdbcType=VARCHAR}
      where id = #{id,jdbcType=VARCHAR}
  </update> -->
